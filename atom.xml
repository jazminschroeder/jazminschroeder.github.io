<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[JazminSchroeder.github.io]]></title>
  <link href="http://jazminschroeder.github.io/atom.xml" rel="self"/>
  <link href="http://jazminschroeder.github.io/"/>
  <updated>2015-11-29T20:59:33-06:00</updated>
  <id>http://jazminschroeder.github.io/</id>
  <author>
    <name><![CDATA[Jazmin Schroeder]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hello Gopher]]></title>
    <link href="http://jazminschroeder.github.io/blog/2015/11/29/hello-gopher/"/>
    <updated>2015-11-29T12:33:02-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2015/11/29/hello-gopher</id>
    <content type="html"><![CDATA[<h4>Download and install</h4>

<p>Download <a href="https://golang.org/dl/">Golang</a> and install it.</p>

<h4>Create your workspace</h4>

<div>
  <pre><code class='ruby'>$ mkdir goprojects
$ export GOPATH=$HOME/goprojects
$ cd goprojects
$ mkdir -p src/github.com/jazminschroeder
$ cd src/github.com/jazminschroeder</code></pre>
</div>


<h4>Creating a project</h4>

<div>
  <pre><code class='ruby'>$ mkdir hello_gopher
$ cd hello_gopher
$ vim hello_gopher.go
 
 # Hello gopher 
 package main
 import &quot;fmt&quot;

 func main() {
  fmt.Println(&quot;Hello gopher!!!&quot;)
 }</code></pre>
</div>


<h4>Go install</h4>

<div>
  <pre><code class='ruby'>$ go install</code></pre>
</div>


<h4>Say hello gopher!</h4>

<div>
  <pre><code class='ruby'>$ ~/goprojects/bin/hello
$ Hello gopher!!!</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mysql query from binary to uuid]]></title>
    <link href="http://jazminschroeder.github.io/blog/2015/11/17/mysql-query-from-binary-to-uuid/"/>
    <updated>2015-11-17T14:40:44-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2015/11/17/mysql-query-from-binary-to-uuid</id>
    <content type="html"><![CDATA[<h3>From binary to uuid</h3>




<div>
  <pre><code class='ruby'>SELECT
  LOWER(
    CONCAT(
      LEFT(HEX(binary_field), 8),
      &#39;-&#39;,
      MID(HEX(binary_field), 9, 4),
      &#39;-&#39;,
      MID(HEX(binary_field), 13, 4),
      &#39;-&#39;,
      MID(HEX(binary_field), 17, 4),
      &#39;-&#39;,
      RIGHT(HEX(binary_field), 12)
    )
  ) AS uuid
FROM some_table</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby and Statsd]]></title>
    <link href="http://jazminschroeder.github.io/blog/2015/04/16/ruby-and-statsd/"/>
    <updated>2015-04-16T15:40:44-05:00</updated>
    <id>http://jazminschroeder.github.io/blog/2015/04/16/ruby-and-statsd</id>
    <content type="html"><![CDATA[<h3>Graph everything</h3>


<p><a href="Using%20statsd-ruby%20gem">https://github.com/reinh/statsd</a></p>

<div>
  <pre><code class='ruby'>require &#39;statsd&#39;

statsd = Statsd.new(&#39;localhost&#39;, 9125)
statsd.namespace=&quot;some.namespace&quot;

#Sending data
statsd.increment &#39;foo.bar&#39;</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dyld: Library not loaded: /usr/local/lib/libevent-2.0.5.dylib]]></title>
    <link href="http://jazminschroeder.github.io/blog/2015/02/14/dyld-library-not-loaded-slash-usr-slash-local-slash-lib-slash-libevent-2-dot-0-5-dot-dylib/"/>
    <updated>2015-02-14T12:08:42-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2015/02/14/dyld-library-not-loaded-slash-usr-slash-local-slash-lib-slash-libevent-2-dot-0-5-dot-dylib</id>
    <content type="html"><![CDATA[<h3>Problems with tmux?</h3>




<div>
  <pre><code class='ruby'>$ tmux
dyld: Library not loaded: /usr/local/lib/libevent-2.0.5.dylib

# Install libevent
$ brew install libevent
Warning: libevent-2.0.21 already installed

# Already intalled. Where is it?
$brew link libevent
Warning: Already linked: /usr/local/Cellar/libevent/2.0.21
To relink: brew unlink libevent &amp;&amp; brew link libevent

# Relink it
$brew unlink libevent &amp;&amp; brew link libevent</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RabbitMQ from the command line]]></title>
    <link href="http://jazminschroeder.github.io/blog/2015/01/09/rabbitmq-from-the-command-line/"/>
    <updated>2015-01-09T13:34:34-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2015/01/09/rabbitmq-from-the-command-line</id>
    <content type="html"><![CDATA[<p><a href="http://www.rabbitmq.com/man/rabbitmqctl.1.man.html">rabbitmqctl</a></p>

<h3>List queues messages and consumers</h3>


<div>
  <pre><code class='ruby'>$ sudo rabbitmqctl list_queues name messages consumers

Listing queues ...
test.two.queue  0       0
test.one.queue     0       0</code></pre>
</div>




<h3>List exchanges</h3>


<div>
  <pre><code class='ruby'>$ sudo rabbitmqctl list_exchanges</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using tags with cucumber]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/06/11/using-tags-with-cucumber/"/>
    <updated>2014-06-11T22:32:53-05:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/06/11/using-tags-with-cucumber</id>
    <content type="html"><![CDATA[<div>
  <pre><code class='ruby'>@mytag
Scenario:

$ cucumber --tags @mytag</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Syncing a fork]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/04/11/syncing-a-fork-with-original-repo/"/>
    <updated>2014-04-11T10:59:03-05:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/04/11/syncing-a-fork-with-original-repo</id>
    <content type="html"><![CDATA[<div>
  <pre><code class='ruby'>#Set a new remote for the orinal repository
$ git remote add upstream git@github.com:jazminschroeder/repo.git

#fetch upstream&#39;s branches
$ git fetch upstream

#merge upstream
$ git merge upstream/master</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongo - list all collections]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/04/07/mongo-list-all-collections/"/>
    <updated>2014-04-07T15:40:23-05:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/04/07/mongo-list-all-collections</id>
    <content type="html"><![CDATA[<div>
  <pre><code class='ruby'>&gt; show dbs
&gt; use my_database
&gt; show collections</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Neo4J change default remote shell port]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/03/22/neo4j-change-default-remote-shell-port/"/>
    <updated>2014-03-22T22:34:11-05:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/03/22/neo4j-change-default-remote-shell-port</id>
    <content type="html"><![CDATA[<p>Neo4j remote shell port defaults to 1337. How to change it?</p>

<div>
  <pre><code class='ruby'># /usr/local/neo4j-server/conf/neo4j.properties
remote_shell_port = 1338</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cucumber Scenario Outlines]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/03/06/cucumber-scenario-outlines/"/>
    <updated>2014-03-06T15:02:41-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/03/06/cucumber-scenario-outlines</id>
    <content type="html"><![CDATA[<div>
  <pre><code class='ruby'>Scenario Outline: Table example
 Given I have an &quot;&lt;option&gt;&quot;
 Then I should see &quot;&lt;result&gt;&quot;

 Examples:
   | option   | result   |
   | option 1 | result 1 |
   | option 2 | result 2 |</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[neo4j-notes]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/02/25/neo4j-notes/"/>
    <updated>2014-02-25T09:52:28-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/02/25/neo4j-notes</id>
    <content type="html"><![CDATA[<h3>Find number of nodes</h3>

<div>
  <pre><code class='ruby'>MATCH (n)
RETURN count(*)
as count;</code></pre>
</div>


<h3>Get all labels</h3>

<div>
  <pre><code class='ruby'>START n=node(*) RETURN labels(n)</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongo: couldn't connect to server 127.0.0.1:27017 at src/mongo/shell/mongo.js:145]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/02/14/mongo-couldnt-connect-to-server-127-dot-0-0-dot-1-27017-at-src-slash-mongo-slash-shell-slash-mongo-dot-js-145/"/>
    <updated>2014-02-14T14:19:40-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/02/14/mongo-couldnt-connect-to-server-127-dot-0-0-dot-1-27017-at-src-slash-mongo-slash-shell-slash-mongo-dot-js-145</id>
    <content type="html"><![CDATA[<p>Problems with mongo lock?</p>

<div>
  <pre><code class='ruby'>$ sudo rm /var/lib/mongodb/mongod.lock
$ sudo service mongodb restart</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage Tmux layouts with teamocil]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/02/01/manage-tmux-layouts-with-teamocil/"/>
    <updated>2014-02-01T12:47:36-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/02/01/manage-tmux-layouts-with-teamocil</id>
    <content type="html"><![CDATA[<p>Starting a tmux session? Open windows, panes, start services and more all with one  command. Meet  <a href="https://github.com/remiprev/teamocil" target="_blank">Teamocil</a></p>

<h3>How to install teamocil?</h3>

<div>
  <pre><code class='ruby'>$ gem install teamocil</code></pre>
</div>




<!-- more -->


<h3>How to create a teamocil layout?</h3>

<script src="https://gist.github.com/jazminschroeder/8757578.js"></script>


<h3>How to use my new layout?</h3>

<div>
  <pre><code class='ruby'>$ tmux
$ teamocil my_layout --here</code></pre>
</div>


<h3>And&hellip;</h3>

<p><img class="center" src="http://jazminschroeder.github.io/images/teamocil_my_layout.png" title="image" alt="images"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install vim plugins as submodules]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/01/28/install-vim-plugins-as-submodules/"/>
    <updated>2014-01-28T23:24:38-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/01/28/install-vim-plugins-as-submodules</id>
    <content type="html"><![CDATA[<h3>Step 1</h3>

<div>
  <pre><code class='ruby'>$ git submodule add http://https://github.com/tpope/vim-surround bundle/surround</code></pre>
</div>


<h3>Step 2</h3>

<div>
  <pre><code class='ruby'>$ git submodule init
$ git submodule update</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim Protips]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/01/20/vimprotips/"/>
    <updated>2014-01-20T21:25:20-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/01/20/vimprotips</id>
    <content type="html"><![CDATA[<h4>One command at the time&hellip;</h4>

<p>A collection of vim commands</p>

<!-- more -->




<table class="table">
  <thead>
    <tr>
      <th>Command</th>
      <th>Description</th>
    </tr>
  </thead>
  <tr>
    <td>b</td>
    <td>Go back a word </td>
  </tr>
  <tr>
    <td>o</td>
    <td>New line below </td>
  </tr>
  <tr>
    <td>O</td>
    <td>New line above </td>
  </tr>
  <tr>
    <td>gg</td>
    <td>Go to the first line</td>
  </tr>
  <tr>
    <td>G</td>
    <td>Go to the last line</td>
  </tr>
</table>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Berkshelf a vagrant plugin]]></title>
    <link href="http://jazminschroeder.github.io/blog/2014/01/18/berkshelf-a-vagrant-plugin/"/>
    <updated>2014-01-18T16:31:03-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2014/01/18/berkshelf-a-vagrant-plugin</id>
    <content type="html"><![CDATA[<p><a href="http://berkshelf.com/" target="_blank">Berkshelf</a> is a bundler-like dependency manger for Chef cookbook. <a href="https://github.com/berkshelf/vagrant-berkshelf">vagrant-berkshelf</a> is a Vagrant plugin to add Berkshelf integration to Chef provisioners to avoid the need to install cookbooks locally and have everything ready when you bring vagrant up.</p>

<h3>How to use?</h3>

<p>Install vagrant-berkshelf</p>

<!-- more -->




<div>
  <pre><code class='ruby'>$ vagrant plugin install vagrant-berkshelf</code></pre>
</div>


<p>Enable it in Vagrantfile</p>

<div>
  <pre><code class='ruby'>Vagrant.configure(&quot;2&quot;) do |config|
  ...
  config.berkshelf.enabled = true
  ...
end</code></pre>
</div>


<p>Generate a Berksfile in the root of your project</p>

<div>
  <pre><code class='ruby'>site :opscode
cookbook &#39;apt&#39;
cookbook &#39;build-essential&#39;

cookbook &#39;ruby_build&#39;, git: &#39;https://github.com/fnichol/chef-ruby_build.git&#39;
cookbook &#39;rbenv&#39;, git: &#39;https://github.com/fnichol/chef-rbenv.git&#39;

cookbook &#39;vim&#39;, path: &#39;./cookbooks/vim&#39;</code></pre>
</div>


<h3>That&rsquo;s it! vagrant up</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage your cookbooks with librarian-chef]]></title>
    <link href="http://jazminschroeder.github.io/blog/2013/12/29/manage-your-cookbooks-with-librarian-chef/"/>
    <updated>2013-12-29T22:17:59-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2013/12/29/manage-your-cookbooks-with-librarian-chef</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/applicationsonline/librarian-chef" target="_blank">librarian-chef</a> is like a bundler for cookbooks. Manage your cookbooks and dependencies in a single file.</p>

<h3>Here is how</h3>




<div>
  <pre><code class='ruby'>$ gem install librarian-chef
$ librarian-chef init
# edit the newly created Cheffile to add your cookbooks
$ librarian-chef install</code></pre>
</div>


<p>Cookboks listed in the Cheffile will be downloaded to the cookbooks folder, you will also noticed a Cheffile.lock is created locking the versions.</p>

<!-- more -->




<h3>Here is an example:</h3>


<div>
  <pre><code class='text'>#!/usr/bin/env ruby
#^syntax detection

site &#39;http://community.opscode.com/api/v1&#39;
cookbook &#39;apt&#39;
cookbook &#39;git&#39;
cookbook &#39;build-essential&#39;
cookbook &#39;tmux&#39;

# Include cookbooks from github 
cookbook &#39;ruby_build&#39;, 
          :git =&gt; &#39;https://github.com/fnichol/chef-ruby_build.git&#39;
cookbook &#39;rbenv&#39;,
          :git =&gt; &#39;https://github.com/fnichol/chef-rbenv.git&#39;,
          :ref =&gt; &#39;v0.7.2&#39;</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyProf: Identify your pain points]]></title>
    <link href="http://jazminschroeder.github.io/blog/2013/12/25/profiling-identify-your-pain-points/"/>
    <updated>2013-12-25T17:28:16-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2013/12/25/profiling-identify-your-pain-points</id>
    <content type="html"><![CDATA[<p>We all have been there: the site worked great in development but not so great in Production. Time to optimize! but&hellip; How to know what to optimize?</p>

<p><a href="https://github.com/ruby-prof/ruby-prof" target="_blank">RubyProf</a> is a fast code profiler for Ruby which helps you find pain points in your code by providing different measure parameters including call times, memory usage and object applications.</p>

<!-- more -->




<h3>Show me the code!</h3>


<div>
  <pre><code class='ruby'>require &#39;ruby-prof&#39;
RubyProf.start

1.upto(100) do |number|
  if number % 5 == 0
    p &#39;Divider&#39;
  else
    p number
  end
end

result = RubyProf.stop
printer = RubyProf::MultiPrinter.new(result)
printer.print(:path =&gt; &quot;.&quot;, :profile =&gt; &quot;profile&quot;)</code></pre>
</div>


<p>Now take a pic at the profile flat report.</p>

<div>
  <pre><code class='txt'>Thread ID: 70113135123160
Fiber ID: 70113151681380
Total: 0.000937
Sort by: self_time

 %self      total      self      wait     child     calls  name
 41.73      0.001     0.000     0.000     0.000      100   Kernel#p
 24.87      0.001     0.000     0.000     0.001        1   Integer#upto
 10.99      0.000     0.000     0.000     0.000       80   Kernel#inspect
 10.46      0.001     0.000     0.000     0.001        1   Global#[No method]
 7.90      0.000     0.000     0.000     0.000       80   Fixnum#to_s
 4.06      0.000     0.000     0.000     0.000       20   String#inspect

         * indicates recursively called methods</code></pre>
</div>


<p><img class="left" src="http://jazminschroeder.github.io/images/call_tree.png" width="350" height="350" title="image" alt="images">
<img class="right" src="http://jazminschroeder.github.io/images/profile_graph.png" width="350" height="350" title="image" alt="images"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Starting with a blog with octopress]]></title>
    <link href="http://jazminschroeder.github.io/blog/2013/12/21/a-blog-with-octopress/"/>
    <updated>2013-12-21T18:55:52-06:00</updated>
    <id>http://jazminschroeder.github.io/blog/2013/12/21/a-blog-with-octopress</id>
    <content type="html"><![CDATA[<p>I decided to start a new technical blog, the main purpose is to keep a record of things I have learned which could potentially help others. My first obvious choice was Wordpress after all is the number one bloging engine out there but somebody mentioned Octopress and so here we are.</p>

<p>Octopress is a framework for Jekyll the blog static site generator powering Github Pages. If you enjoy working with the console then Octopress will feel very comfortable. There are a lot of resources out there to get you started with <a href="http://jekyllrb.com/" target="_blank">Jekyll</a> and github pages,  <a href="http://octopress.org" target="_blank">Octopress</a> just makes it dead simple to get up and running in no time and there are a lot of themes and plugins ready to use to make your blog your own.</p>

<p>Use your favorite editor, commit to Github, deploy with a simple rake task and host your blog at Github for free. How can you go wrong with that?</p>

<!-- more -->


<h4>Everything you need is one rake away</h4>

<div>
  <pre><code class='ruby'>rake clean                     # Clean out caches: .pygments-cache, .gist-c...
rake copydot[source,dest]      # copy dot files for deployment
rake deploy                    # Default deploy task
rake gen_deploy                # Generate website and deploy
rake generate                  # Generate jekyll site
rake install[theme]            # Initial setup for Octopress: copies the de...
rake integrate                 # Move all stashed posts back into the posts...
rake isolate[filename]         # Move all other posts than the one currentl...
rake list                      # list tasks
rake new_page[filename]        # Create a new page in source/(filename)/ind...
rake new_post[title]           # Begin a new post in source/_posts
rake preview                   # preview the site in a web browser
rake push                      # deploy public directory to github pages
rake rsync                     # Deploy website via rsync
rake set_root_dir[dir]         # Update configurations to support publishin...
rake setup_github_pages[repo]  # Set up _deploy folder and deploy branch fo...
rake update_source[theme]      # Move source to source.old, install source ...
rake update_style[theme]       # Move sass to sass.old, install sass theme ...
rake watch                     # Watch the site and regenerate when it changes</code></pre>
</div>



]]></content>
  </entry>
  
</feed>
